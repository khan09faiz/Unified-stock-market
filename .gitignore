# Unified Stock Market Analysis System - .gitignore

# ==============================================================================
# Python
# ==============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ==============================================================================
# Machine Learning & Data Science
# ==============================================================================

# Trained models and checkpoints
*.pth
*.pt
*.ckpt
*.h5
*.hdf5
*.pkl
*.pickle
*.joblib
*.model
*.bin
models/
checkpoints/
saved_models/

# Large datasets
*.csv
!requirements.txt
!config.py
data/raw/
data/processed/
data/external/
datasets/

# Jupyter notebook output
*.ipynb_checkpoints

# MLflow
mlruns/
mlartifacts/

# Weights & Biases
wandb/

# TensorBoard
runs/
logs/
tensorboard/

# PyTorch
lightning_logs/

# ==============================================================================
# Stock Market Analysis Specific
# ==============================================================================

# Market data files
*.json
!package.json
!package-lock.json
!tsconfig.json

# Trading results and analysis outputs
results/*.csv
results/*.json
results/*.png
results/*.jpg
results/*.pdf
results/*.html
results/*.pth
results/*.pkl

# Downloaded financial data
stock_data/
market_data/
financial_data/

# API keys and credentials
.env
.env.local
.env.production
.env.staging
config/secrets.py
secrets.py
api_keys.py
credentials.json

# Trading simulation outputs
trading_logs/
simulation_results/
backtest_results/
portfolio_data/

# Generated reports
reports/
analysis_reports/
performance_reports/

# ==============================================================================
# IDEs and Editors
# ==============================================================================

# VSCode
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# Sublime Text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache
*.sublime-workspace
*.sublime-project

# Vim
*~
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ==============================================================================
# Operating System
# ==============================================================================

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ==============================================================================
# Temporary and Cache Files
# ==============================================================================

# Temporary files
*.tmp
*.temp
*.bak
*.backup
*.old
*.orig
*.rej
*.swp
*.swo
*~

# Cache directories
.cache/
.pytest_cache/
.coverage
.nyc_output

# Log files
*.log
logs/
log/

# ==============================================================================
# Project Specific Exclusions
# ==============================================================================

# Virtual environment
.venv/
venv/
env/

# Configuration files with sensitive data
config/production.py
config/local.py

# Large result files
results/large_analysis/
results/historical_data/
results/backtest_archives/

# Temporary analysis files
temp_analysis/
scratch/
experimental/
testing/

# Compressed files
*.zip
*.rar
*.7z
*.tar.gz
*.tar.bz2

# ==============================================================================
# Keep Important Files (Override exclusions)
# ==============================================================================

# Keep essential project files
!README.md
!requirements.txt
!setup.py
!config.py
!LICENSE
!.gitignore
!Dockerfile
!docker-compose.yml

# Keep sample/demo result files (small ones)

# Keep documentation
!docs/
!*.md

# Keep source code
!src/
!notebooks/*.ipynb
!tests/

# ==============================================================================
# Notes
# ==============================================================================

# This .gitignore is configured for the Unified Stock Market Analysis System
# It excludes:
# - Python cache and build files
# - Large ML models and datasets
# - Sensitive API keys and credentials
# - Generated analysis results
# - IDE and OS specific files
# - Temporary and log files
#
# It preserves:
# - Source code and configuration
# - Documentation
# - Small demo result files
# - Project structure files
results/
venv/
.venv/
